#!/usr/bin/env bash
# functions - utility shell functions

# Set paths to dotfiles and local override directories.
DOTFILES=$HOME/.dotfiles
DOTFILES_LOCAL=$DOTFILES/local

# Navigate with `.. [#]`.
function .. {
    local n="$1"
    if [[ -n "$n" && ! "$n" =~ ^[1-9][0-9]*$ ]]; then
        echo "positive integer expected" >&2; return 1
    fi
    [[ "$n" -gt 0 ]] && ((n--))
    local s
    printf -v s "..%${n}s"
    cd "${s// //..}"
}

# Jump around with `go <directory name>`.
function go {
    local dir="$1"
    [[ -z "$dir" ]] && return

    local -r extensions=('.git' '.svn' '.hg')
    local path="$PWD"
    local repo_dir_found=false
    until [[ "$path" = "/" ]]; do
        local e
        for e in "${extensions[@]}"; do
            if [[ -d "$path/$e" ]]; then
                repo_dir_found=true
                break
            fi
        done
        "$repo_dir_found" && break
        path="$(dirname "$path")"
    done

    if ! "$repo_dir_found"; then
        path="$PWD"
    fi

    matches=$(find "$path/" -type d \
              \( -path '*/.git*' -o -path '*/.svn*' -o -path '*/.hg*' \) \
              -prune -o -name "$dir" -print)
    if [[ "$(wc -l <<< "$matches")" -eq 1 ]]; then
        cd "$matches"
    else
        local match
        select match in $matches; do
            if [[ -n "$match" ]]; then
                cd "$match"
            fi
            break
        done
    fi
}

# Source local override file if one exists.
[ -r "$DOTFILES_LOCAL"/functions ] && . "$DOTFILES_LOCAL"/functions
